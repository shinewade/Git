flow OTHER_GRP {
    setup {

        suite RESET_RESETN calls BT1502_pro_tml.FUNC.RESET_RESETN {
            spec_measurement = setupRef(mainSpecs.Spec_I2C);
        }

        suite UART_INIT calls BT1502_pro_tml.FUNC.UART_INIT {
            spec_measurement = setupRef(mainSpecs.Spec_I2C);
            spec_measurement_UART = setupRef(mainSpecs.Spec_UART);
        }

        suite DCDC_PowerOn calls BT1502_pro_tml.DC.DCDC_PowerOn_2700 {
            spec_measurement = setupRef(mainSpecs.Spec_I2C);
        }

        suite ADC_Check calls BT1502_pro_tml.DC.Check_ADC {
            spec_measurement = setupRef(mainSpecs.Spec_I2C);
        }

        suite Sleep_Wakeup_Lowcore_TEST calls
            BT1502_pro_tml.MEMORY.Sleep_Wakeup_Lowcore_TEST {
            spec_measurement = setupRef(mainSpecs.Spec_I2C);
            spec_measurement_UART = setupRef(mainSpecs.Spec_UART);
        }

        suite USB_TEST calls BT1502_pro_tml.DC.USB_TEST {
            spec_measurement = setupRef(mainSpecs.Spec_I2C);
        }

        suite ADC0_TEST calls BT1502_pro_tml.DC.ADC0_TEST {
            spec_measurement = setupRef(mainSpecs.Spec_I2C);
        }

        suite ADC2_TEST calls BT1502_pro_tml.DC.ADC2_TEST {
            spec_measurement = setupRef(mainSpecs.Spec_I2C);
        }

        suite ADC_Vref calls BT1502_pro_tml.DC.ADC_Vref {
            spec_measurement = setupRef(mainSpecs.Spec_I2C);
        }

        suite GPIO_TEST_INPUT_GANG calls BT1502_pro_tml.DC.GPIO_TEST_INPUT_GANG {
            spec_measurement = setupRef(mainSpecs.Spec_I2C);
        }

        suite GPIO_FLASH_TEST_INPUT_GANG calls
            BT1502_pro_tml.DC.GPIO_FLASH_TEST_INPUT_GANG {
            spec_measurement = setupRef(mainSpecs.Spec_I2C);
        }

        suite IIL_IIH_TEST calls BT1502_pro_tml.DC.IIL_IIH_TEST {
            spec_measurement = setupRef(mainSpecs.Spec_I2C);
        }

        suite IIL_IIH_FLASH_TEST calls BT1502_pro_tml.DC.IIL_IIH_FLASH_TEST {
            spec_measurement = setupRef(mainSpecs.Spec_I2C);
        }

        suite GPIO_TEST_OUTPUT_GANG calls BT1502_pro_tml.DC.GPIO_TEST_OUTPUT_GANG {
            spec_measurement = setupRef(mainSpecs.Spec_I2C);
        }

        suite POWEROFF_CURRENT calls BT1502_pro_tml.DC.POWER_OFF_CURRENT {
            spec_measurement = setupRef(mainSpecs.Spec_I2C);
        }

        suite VCHG_R_Test calls BT1502_pro_tml.DC.VCHG_R_Test {
        }

        suite LDO_meas calls BT1502_pro_tml.DC.LDO_meas {
        }

        suite read_allreg calls BT1502_pro_tml.DC.read_all_register {
            spec_measurement = setupRef(mainSpecs.Spec_I2C);
        }

        suite ramrun_nullBin calls BT1502_pro_tml.MEMORY.RAMRUN_nullBin {
            spec_measurement = setupRef(mainSpecs.Spec_I2C);
            spec_measurement_UART = setupRef(mainSpecs.Spec_UART);
        }
        suite ramrun_test calls BT1502_pro_tml.MEMORY.RAMRUN_TEST_dyn {
            spec_measurement = setupRef(mainSpecs.Spec_I2C);
            spec_measurement_UART = setupRef(mainSpecs.Spec_UART);
            wait_time_s = 1;
        }
    }

    execute {
        RESET_RESETN.execute();
        UART_INIT.execute();
        ramrun_test.execute();
        //    RESET_RESETN.execute();
        //    Sleep_Wakeup_Lowcore_TEST.execute();
        //    RESET_RESETN.execute();
        DCDC_PowerOn.execute();
        ADC_Check.execute();
        //    read_allreg.execute();
        ADC0_TEST.execute();
        ADC2_TEST.execute();
        ADC_Vref.execute();
        RESET_RESETN.execute();
        UART_INIT.execute();
        USB_TEST.execute();
        //    DCDC_PowerOn.execute();
        RESET_RESETN.execute();
        UART_INIT.execute();
        GPIO_TEST_INPUT_GANG.execute();
        IIL_IIH_TEST.execute();
        GPIO_FLASH_TEST_INPUT_GANG.execute();
        IIL_IIH_FLASH_TEST.execute();
        GPIO_TEST_OUTPUT_GANG.execute();
        RESET_RESETN.execute();
        UART_INIT.execute();
        POWEROFF_CURRENT.execute();
        VCHG_R_Test.execute();
    }
}
